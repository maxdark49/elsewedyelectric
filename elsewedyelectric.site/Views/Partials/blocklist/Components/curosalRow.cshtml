@inherits UmbracoViewPage<BlockListItem>

@{
    var row = (CurosalRow)Model.Content;
      var settings =(CurosalRowSettings)Model.Settings;
    if(settings?.Hide ?? false) {return;}
    if (row.CurosalItems==null ||!row.CurosalItems.Any() )return;
    var curoselID ="Curosal" +row.Key;
}
@{var itemindex=0;}
@{var itemindex2=0;}
@{var itemindex3=0;}
<div id="desktop">
<div id="@curoselID" class="carousel slide" data-ride="carousel">
  <!-- Indicators -->
  

  <!-- Wrapper for slides -->
  <div class="carousel-inner">
    

 @for (int item2 =0 ; item2<=2;item2++)
 {
    var isfirstitem2 = itemindex2 ==0;
               var rowitem2 = (Curosalitem)row.CurosalItems[item2].Content;
          var rowsettings2 =(CurosalitemSettings)row.CurosalItems[item2].Settings;
       {   if(rowsettings2.Hide)continue;}
    <div class="item @(isfirstitem2 ?"active" : null)">
       @if( item2==0)
    {
       
      @for (int j=0; j<=4;j++)
      {
         var rowitem3 = (Curosalitem)row.CurosalItems[j].Content;
          var rowsettings3 =(CurosalitemSettings)row.CurosalItems[j].Settings;
         {if(rowsettings3.Hide)continue;}
               <div class="col-s">
                            <div class="realColumn-s">
                                <a href="@rowitem3.Link?.Url" class="box-item-element" id="box-item-element">
                                    <div class="box-item" style="background-image:url('@rowitem3.Image.Url()?anchor=center&amp;mode=crop&amp;width=380&amp;height=355&amp;rnd=132440410630000000');">
                                        <div class="box-item-effect" id="box-item-effect"></div>
                                        <div class="box-item-effect2" id="box-item-effect2"></div>
                                        <div class="box-item-content">
                                            <h3 class="box-item-title">@rowitem3.Title</h3>
                                            <div class="find-more">
                                                <p>@Umbraco.GetDictionaryValue("findoutmore")</p>
                                                <i class="icon-line-arrow-right" id="icon-line-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
      }
    }
      
      else if( item2==1)
    {
      @for (int j=5; j<=9;j++)
      {

        var rowitem3 = (Curosalitem)row.CurosalItems[j].Content;
          var rowsettings3 =(CurosalitemSettings)row.CurosalItems[j].Settings;
          {if(rowsettings3.Hide)continue;}
               <div class="col-s">
                            <div class="realColumn-s">
                                <a href="@rowitem3.Link?.Url" class="box-item-element" id="box-item-element">
                                    <div class="box-item" style="background-image:url('@rowitem3.Image.Url()?anchor=center&amp;mode=crop&amp;width=380&amp;height=355&amp;rnd=132440410630000000');">
                                        <div class="box-item-effect" id="box-item-effect"></div>
                                        <div class="box-item-effect2" id="box-item-effect2"></div>
                                        <div class="box-item-content">
                                            <h3 class="box-item-title">@rowitem3.Title</h3>
                                            <div class="find-more">
                                      <p>@Umbraco.GetDictionaryValue("findoutmore")</p>
                                                <i class="icon-line-arrow-right" id="icon-line-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
      }
    }  

        else if( item2==2)
    {
      @for (int j=10; j<=10;j++)
      {
        var rowitem3 = (Curosalitem)row.CurosalItems[j].Content;
          var rowsettings3 =(CurosalitemSettings)row.CurosalItems[j].Settings;
          {if(rowsettings3.Hide)continue;}
               <div class="col-s">
                            <div class="realColumn-s">
                                <a href="@rowitem3.Link?.Url" class="box-item-element" id="box-item-element">
                                    <div class="box-item" style="background-image:url('@rowitem3.Image.Url()?anchor=center&amp;mode=crop&amp;width=380&amp;height=355&amp;rnd=132440410630000000');">
                                        <div class="box-item-effect" id="box-item-effect"></div>
                                        <div class="box-item-effect2" id="box-item-effect2"></div>
                                        <div class="box-item-content">
                                            <h3 class="box-item-title">@rowitem3.Title</h3>
                                            <div class="find-more">
                                                <p>@Umbraco.GetDictionaryValue("findoutmore")</p>
                                                <i class="icon-line-arrow-right" id="icon-line-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
      }

       @for (int k=0; k<=3;k++)
      {
        var rowitem3 = (Curosalitem)row.CurosalItems[k].Content;
          var rowsettings3 =(CurosalitemSettings)row.CurosalItems[k].Settings;
         { if(rowsettings3.Hide)continue;}
               <div class="col-s">
                            <div class="realColumn-s">
                                <a href="@rowitem3.Link?.Url" class="box-item-element" id="box-item-element">
                                    <div class="box-item" style="background-image:url('@rowitem3.Image?.Url()?anchor=center&amp;mode=crop&amp;width=380&amp;height=355&amp;rnd=132440410630000000');">
                                        <div class="box-item-effect" id="box-item-effect"></div>
                                        <div class="box-item-effect2" id="box-item-effect2"></div>
                                        <div class="box-item-content">
                                            <h3 class="box-item-title">@rowitem3.Title</h3>
                                            <div class="find-more">
                                         <p>@Umbraco.GetDictionaryValue("findoutmore")</p>
                                                <i class="icon-line-arrow-right" id="icon-line-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
      }
    }        
            
          
    </div>
  {itemindex2++;}
 }
  </div>
  <!-- Left and right controls -->
  <a class="left carousel-control" href="#@curoselID" data-slide="prev">
    <span class="glyphicon glyphicon-chevron-left" style="color:red;"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="right carousel-control" href="#@curoselID" data-slide="next">
    <span class="glyphicon glyphicon-chevron-right" style="color:red;"></span>
    <span class="sr-only">Next</span>
  </a>

    <ol class="carousel-indicators" style="margin-bottom:-34px; ;">
    @for (int item=0; item<=2;item++)
        {
          
            var isfirstitem = itemindex ==0;
               var rowitem = (Curosalitem)row.CurosalItems[item].Content;
          var rowsettings =(CurosalitemSettings)row.CurosalItems[item].Settings;
          if(rowsettings.Hide)continue;
 <li data-target="#@curoselID" data-slide-to="@itemindex" class="@(isfirstitem?"active" : null)"></li>
       { itemindex++;}
        }
   </ol>

</div>
</div>


<div id=mobile>
 <div id="@curoselID" class="carousel slide" data-ride="carousel">
  <!-- Indicators -->


  <!-- Wrapper for slides -->
  <div class="carousel-inner">
    

 @for (int item2 =0 ; item2<=10;item2++)
 {
    var isfirstitem2 = itemindex3 ==0;
               var rowitem2 = (Curosalitem)row.CurosalItems[item2].Content;
          var rowsettings2 =(CurosalitemSettings)row.CurosalItems[item2].Settings;
       {   if(rowsettings2.Hide)continue;}
    <div class="item @(isfirstitem2 ?"active" : null)">
         
      @{
        {if(rowsettings2.Hide)continue;}
               <div class="col-s">
                            <div class="realColumn-s">
                                <a href="@rowitem2.Link?.Url" class="box-item-element" id="box-item-element">
                                    <div class="box-item" style="background-image:url('@rowitem2.Image.Url()?anchor=center&amp;mode=crop&amp;width=380&amp;1=355&amp;rnd=132440410630000000');">
                                        <div class="box-item-effect" id="box-item-effect"></div>
                                        <div class="box-item-effect2" id="box-item-effect2"></div>
                                        <div class="box-item-content">
                                            <h3 class="box-item-title">@rowitem2.Title</h3>
                                            <div class="find-more">
                                                <p>@Umbraco.GetDictionaryValue("findoutmore")</p>
                                                <i class="icon-line-arrow-right" id="icon-line-arrow-right"></i>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
      
    
      
  
      }        
    </div>
    {itemindex3++;}

 }
  </div>
  <!-- Left and right controls -->
  <a class="left carousel-control" href="#@curoselID" data-slide="prev">
    <span class="glyphicon glyphicon-chevron-left" style="color:red;"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="right carousel-control" href="#@curoselID" data-slide="next">
    <span class="glyphicon glyphicon-chevron-right" style="color:red;"></span>
    <span class="sr-only">Next</span>
  </a>

    <ol class="carousel-indicators" style="margin-bottom:-34px; ;">
    @for (int item=0; item<=10;item++)
        {
          
            var isfirstitem = itemindex ==0;
               var rowitem = (Curosalitem)row.CurosalItems[item].Content;
          var rowsettings =(CurosalitemSettings)row.CurosalItems[item].Settings;
          if(rowsettings.Hide)continue;
 <li data-target="#@curoselID" data-slide-to="@itemindex" class="@(isfirstitem?"active" : null)"></li>
       { itemindex++;}
        }
   </ol>

</div>   
</div>
 

